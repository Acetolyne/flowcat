# This is a basic workflow to help you get started with Actions

  name: "linux-386 build and functionality"
  # Controls when the workflow will run
  on:
    # Triggers the workflow on push or pull request events but only for the master branch
    push:
      branches: [ "*" ]
    # pull_request:
    #   branches: [ "*" ]
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
  jobs:
    #Job1
    build:
    # The type of runner that the job will run on
      runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        - uses: actions/setup-go@v2
          with:
            go-version: '^1.17.1'
          #with:
            # The Go version to download (if necessary) and use. Supports semver spec and ranges.
            #go-version: # optional
            # Whether to download only stable versions
            #stable: # optional, default is true
            # Used to pull node distributions from go-versions.  Since there's a default, this is typically not supplied by the user.
            #token: # optional, default is ${{ github.token }}

      # Runs a single command using the runners shell
        #- name: Run a one-line script
        #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
        - name: build-script
          run: |
            cd ${{ github.workspace }}
            cd tests
            sh -e ./test_runner.sh linux-386
            if [ `echo $?` -ne 0 ]; then exit 1; fi

        - uses: stefanzweifel/git-auto-commit-action@v4
          with:
            # Optional, but recommended
            commit_message: "Automatic Binary Builds"


            # Optional. Used by `git-commit`.
            # See https://git-scm.com/docs/git-commit#_options
            commit_options: '--no-verify --signoff'

            # Optional glob pattern of files which should be added to the commit
            # Defaults to all (.)
            # See the `pathspec`-documentation for git
            # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
            # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
            file_pattern: bin/*

            # Optional. Used by `git-status`
            # See https://git-scm.com/docs/git-status#_options
            status_options: '--untracked-files=yes'

            # Optional. Used by `git-push`
            # See https://git-scm.com/docs/git-push#_options
            push_options: '--force'
            
            # Optional. Disable dirty check and always try to create a commit and push
            skip_dirty_check: true    
            
            # Optional. Skip internal call to `git fetch`
            skip_fetch: true    
            
            # Optional. Skip internal call to `git checkout`
            skip_checkout: true

            # Optional. Prevents the shell from expanding filenames. 
            # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
            disable_globbing: true